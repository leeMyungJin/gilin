<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gilin.Mappers.ProjectMapper">
	<select id="getAllProjectList" parameterType="hashMap" resultType="ProjectVo">
		select p.pj_seq
				, p.ch_seq 
				, p.pj_name 
				, p.pj_img 
				, p.pj_memo 
				, p.pj_content 
				, to_char(p.cret_dt  , 'YYYY.MM.DD') as cret_dt 
				, p.cret_id 
				, to_char(p.updt_dt  , 'YYYY.MM.DD') as updt_dt 
				, p.updt_id 
				, coalesce(pf.fd_amt, 0) as fd_sum_amt
				, case when pfc.pj_seq is not null then 'Y' else 'N' end as fd_yn --펀딩완료여부
				, case when to_char(now()-c.ch_end_dt, 'dd')::numeric <![CDATA[<]]> 0 
						then 'D' || to_char(now()-c.ch_end_dt, 'dd')::numeric
						else 'D+' || to_char(now()-c.ch_end_dt, 'dd')::numeric end as d_day
		from web.project p left join (select pj_seq, sum(fd_amt) as fd_amt
										from web.project_funding
										group by pj_seq) pf on pf.pj_seq = p.pj_seq 
						   left join (select distinct pj_seq
										from web.project_funding
										where cret_id = #{memberId}) pfc on pfc.pj_seq = p.pj_seq
							left join web.channel c on p.ch_seq = c.ch_seq 
		where p.ch_seq = #{chSeq}::numeric
		<choose>
			<when test="state == 'orderName'">
				order by p.pj_name
			</when>
			<when test="state == 'orderMaxAmt'">
				order by pf.fd_amt, p.pj_name
			</when>
			<when test="state == 'orderMinAmt'">
				order by pf.fd_amt desc, p.pj_name
			</when>
			<when test="state == 'latest'">
				order by p.cret_dt desc
			</when>
		</choose>
	</select>
	
	<select id="getMyProjectList" parameterType="hashMap" resultType="ProjectVo">
		select p.pj_seq
				, p.ch_seq 
				, p.pj_name 
				, p.pj_img 
				, p.pj_memo 
				, p.pj_content 
				, to_char(p.cret_dt  , 'YYYY.MM.DD') as cret_dt 
				, p.cret_id 
				, to_char(p.updt_dt  , 'YYYY.MM.DD') as updt_dt 
				, p.updt_id 
				, coalesce(pf.fd_amt, 0) as fd_sum_amt
				, case when pfc.pj_seq is not null then 'Y' else 'N' end as fd_yn --펀딩완료여부
				, case when to_char(now()-c.ch_end_dt, 'dd')::numeric <![CDATA[<]]> 0 
						then 'D' || to_char(now()-c.ch_end_dt, 'dd')::numeric
						else 'D+' || to_char(now()-c.ch_end_dt, 'dd')::numeric end as d_day
		from web.project p left join (select pj_seq, sum(fd_amt) as fd_amt
										from web.project_funding
										group by pj_seq) pf on pf.pj_seq = p.pj_seq 
						   left join (select distinct pj_seq
										from web.project_funding
										where cret_id = #{memberId}) pfc on pfc.pj_seq = p.pj_seq
							left join web.channel c on p.ch_seq = c.ch_seq 
		where 1=1
		<if test="chSeq != null and chSeq != ''">
			and p.ch_seq = #{chSeq}::numeric
		</if>
		and p.cret_id = #{memberId}
	</select>
	
	<select id="getProjectInfo" parameterType="hashMap" resultType="ProjectVo">
		select p.pj_seq
				, p.ch_seq 
				, p.pj_name 
				, p.pj_img 
				, p.pj_memo 
				, p.pj_content 
				, to_char(p.cret_dt  , 'YYYY.MM.DD') as cret_dt 
				, p.cret_id 
				, to_char(p.updt_dt  , 'YYYY.MM.DD') as updt_dt 
				, p.updt_id 
				, to_char(coalesce(pf.fd_amt, 0), 'fm9,999,999,990') as fd_sum_amt
				, coalesce(pf.fd_cnt, 0) as fd_cnt
				, case when pfc.pj_seq is not null then 'Y' else 'N' end as fd_yn --펀딩완료여부
				, to_char(c.ch_st_dt, 'YYYY-MM-DD') as ch_st_dt 
				, to_char(c.ch_end_dt , 'YYYY-MM-DD') as ch_end_dt 
				, case when to_char(c.ch_end_dt, 'yyyymmdd') <![CDATA[<]]> to_char(now(), 'yyyymmdd') then 'Y' else 'N' end as fin_yn
				, case when to_char(now()-c.ch_end_dt, 'dd')::numeric <![CDATA[<]]> 0 
						then 'D' || to_char(now()-c.ch_end_dt, 'dd')::numeric
						else 'D+' || to_char(now()-c.ch_end_dt, 'dd')::numeric end as d_day
				, case when to_char(now()-c.ch_end_dt, 'dd')::numeric <![CDATA[<]]> 0 
						then (100-trunc((to_char(now()-c.ch_end_dt, 'dd')::numeric/to_char(c.ch_end_dt-c.ch_fd_st_dt, 'dd')::numeric)*-100, 0)) * 3.84 --화면프로그래스바의 100%값이 384임
						else 384 end as d_day_percent
		from web.project p left join (select pj_seq, sum(fd_amt) as fd_amt, count(distinct cret_id) as fd_cnt
										from web.project_funding
										group by pj_seq) pf on pf.pj_seq = p.pj_seq 
						   left join (select distinct pj_seq
										from web.project_funding
										where cret_id = #{memberId}) pfc on pfc.pj_seq = p.pj_seq
						    left join web.channel c on p.ch_seq = c.ch_seq 
		where 1=1
		and p.pj_seq = #{pjSeq}::numeric
	</select>
	
	<insert id="insertProject" parameterType="hashMap">
		insert into web.project(
			ch_seq
			, pj_name 
			, pj_img 
			, pj_memo 
			, pj_content 
			, cret_id 
			, cret_dt
		)values(
			#{chSeq}::numeric
			, #{pjName} 
			, #{pjImg}
			, #{pjMemo}
			, #{pjContent} 
			, #{cretId} 
			, now()
		)

	</insert>
	
	<update id="updateProject" parameterType="hashMap">
		update web.project set
			pj_name = #{pjName} 
			, pj_img = #{pjImg}
			, pj_memo = #{pjMemo}
			, pj_content = #{pjContent} 
			, updt_dt = now()
			, updt_id = #{updtId}
		where pj_seq = #{pjSeq}::numeric
	</update>
	
	<delete id="deleteProject" parameterType="hashMap">
		delete from web.project 
		where pj_seq = #{pjSeq}::numeric
	</delete>
	

</mapper>